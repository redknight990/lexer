(lexpositivegrading.src:1:1) [Operator, ==]
(lexpositivegrading.src:1:4) [Operator, +]
(lexpositivegrading.src:1:6) [Operator, |]
(lexpositivegrading.src:1:8) [Punctuator, (]
(lexpositivegrading.src:1:10) [Punctuator, ;]
(lexpositivegrading.src:1:12) [Keyword, if]
(lexpositivegrading.src:1:16) [Keyword, public]
(lexpositivegrading.src:1:23) [Keyword, read]
(lexpositivegrading.src:2:1) [Operator, <>]
(lexpositivegrading.src:2:4) [Operator, -]
(lexpositivegrading.src:2:6) [Operator, &]
(lexpositivegrading.src:2:8) [Punctuator, )]
(lexpositivegrading.src:2:10) [Punctuator, ,]
(lexpositivegrading.src:2:12) [Keyword, then]
(lexpositivegrading.src:2:17) [Keyword, private]
(lexpositivegrading.src:2:25) [Keyword, write]
(lexpositivegrading.src:3:1) [Operator, <]
(lexpositivegrading.src:3:3) [Operator, *]
(lexpositivegrading.src:3:5) [Operator, !]
(lexpositivegrading.src:3:7) [Punctuator, {]
(lexpositivegrading.src:3:9) [Punctuator, .]
(lexpositivegrading.src:3:11) [Keyword, else]
(lexpositivegrading.src:3:16) [Keyword, func]
(lexpositivegrading.src:3:21) [Keyword, return]
(lexpositivegrading.src:4:1) [Operator, >]
(lexpositivegrading.src:4:3) [Operator, /]
(lexpositivegrading.src:4:6) [Punctuator, }]
(lexpositivegrading.src:4:8) [Punctuator, :]
(lexpositivegrading.src:4:10) [Keyword, integer]
(lexpositivegrading.src:4:18) [Keyword, var]
(lexpositivegrading.src:4:22) [Keyword, self]
(lexpositivegrading.src:5:1) [Operator, <=]
(lexpositivegrading.src:5:4) [Operator, =]
(lexpositivegrading.src:5:7) [Punctuator, []
(lexpositivegrading.src:5:9) [Punctuator, ::]
(lexpositivegrading.src:5:12) [Keyword, float]
(lexpositivegrading.src:5:18) [Keyword, struct]
(lexpositivegrading.src:5:25) [Keyword, inherits]
(lexpositivegrading.src:6:1) [Operator, >=]
(lexpositivegrading.src:6:6) [Punctuator, ]]
(lexpositivegrading.src:6:8) [Operator, ->]
(lexpositivegrading.src:6:11) [Keyword, void]
(lexpositivegrading.src:6:16) [Keyword, while]
(lexpositivegrading.src:6:22) [Keyword, let]
(lexpositivegrading.src:7:7) [Keyword, func]
(lexpositivegrading.src:7:12) [Keyword, impl]
(lexpositivegrading.src:13:1) [Integer, 0]
(lexpositivegrading.src:14:1) [Integer, 1]
(lexpositivegrading.src:15:1) [Integer, 10]
(lexpositivegrading.src:16:1) [Integer, 12]
(lexpositivegrading.src:17:1) [Integer, 123]
(lexpositivegrading.src:18:1) [Integer, 12345]
(lexpositivegrading.src:20:1) [Float, 1.23]
(lexpositivegrading.src:21:1) [Float, 12.34]
(lexpositivegrading.src:22:1) [Float, 120.34e10]
(lexpositivegrading.src:23:1) [Float, 12345.6789e-123]
(lexpositivegrading.src:25:1) [Identifier, abc]
(lexpositivegrading.src:26:1) [Identifier, abc1]
(lexpositivegrading.src:27:1) [Identifier, a1bc]
(lexpositivegrading.src:28:1) [Identifier, abc_1abc]
(lexpositivegrading.src:29:1) [Identifier, abc1_abc]
(lexpositivegrading.src:31:1) [Comment, // this is an inline comment]
(lexpositivegrading.src:33:1) [BlockComment, /* this is a single line block comment */]
(lexpositivegrading.src:35:1) [BlockComment, /* this is a 
multiple line
block comment 
*/]
(lexpositivegrading.src:40:1) [BlockComment, /* this is an imbricated 
/* block comment
*/]
(lexpositivegrading.src:43:1) [Operator, *]
(lexpositivegrading.src:43:2) [Operator, /]
